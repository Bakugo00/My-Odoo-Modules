<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="0">
<!--update rules -->
       <function name="write" model="ir.model.data">
            <function name="search" model="ir.model.data">
                <value eval="[('module', 'in', ['crm']), ('name', 'in', ['crm_rule_personal_lead','crm_rule_all_lead'])]"/>
            </function>
            <value eval="{'noupdate': False}"/>
        </function>
<!--Ctegory Opportunité/leads for CRM module access groups-->
        <record model="ir.module.category" id="crm_parent_category">
            <field name="name">Opportunité/Leads</field>
            <field name="description">CRM parent Application</field>
        </record>
        <record model="ir.module.category" id="crm_category">
            <field name="name">Opportunité/Leads</field>
            <field name="description">CRM Application</field>
            <field name="parent_id" ref="crm_parent_category"/>
        </record>
<!-- Groups Opportunités/Leads -->
    <!--Group : collaborateur-->
        <record id="group_crm_collaborateur" model="res.groups">
            <field name="name">Collaborateur</field>
            <field name="category_id" ref="crm_category"/>
        </record>
    <!--Group : Manager N+1-->
        <record id="group_crm_n" model="res.groups">
            <field name="name">Manager N+1</field>
            <field name="category_id" ref="crm_category"/>
            <field name="implied_ids" eval="[(4, ref('group_crm_collaborateur'))]"/>
        </record>
    <!--Group : Manager RH group-->
        <record id="group_crm_manager_rh" model="res.groups">
            <field name="name">Manager RH</field>
            <field name="category_id" ref="crm_category"/>
            <field name="implied_ids" eval="[(4, ref('group_crm_n'))]"/>
        </record>

    <!--Group : Manager IT/Direction Group-->
        <record id="group_crm_manager_it" model="res.groups">
            <field name="name">Manager IT/Direction</field>
            <field name="category_id" ref="crm_category"/>
            <field name="implied_ids" eval="[(4, ref('group_crm_manager_rh'))]"/>
        </record>

<!--Rules-->
<!--Rule : group manager n+1 and group manager rh -->
        <record id="crm_rule_manager_n" model="ir.rule">
            <field name="name">crm.rule.manager.n</field>
            <field name="model_id" ref="crm.model_crm_lead"/>
            <!--manager n+1 can read,modify and create all opportunities where the partner_id is a in one of portfolios where the user is responsible  -->
            <field name="domain_force">['|',('user_id','=',user.id),('user_id.employee_ids.parent_id','child_of',user.employee_ids.ids)]</field>
            <field name="groups" eval="[(4, ref('group_crm_manager_rh')),(4,ref('group_crm_n'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>
<!--Rule : group collaborateur-->
        <record id="crm.crm_rule_personal_lead" model="ir.rule">
        <!-- collaborateur has acces to read/create/moodify where partner_id is in his portfolios-->
            <field name="domain_force">[('user_id','=',user.id)]</field>
            <field name="groups" eval="[(6,0, [ref('group_crm_collaborateur')])]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>
<!--Rule : group direction : Access to all crm rule-->
        <record id="crm.crm_rule_all_lead" model="ir.rule">
        <!--manager it has access to all contacts-->
            <field name="domain_force">[(1,'=',1)]</field>
            <field name="groups" eval="[(6,0, [ref('group_crm_manager_it')])]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>

<!-- Application : Contacts-->
       <record model="ir.module.category" id="res_partner_parent__category">
            <field name="name">Contacts</field>
            <field name="description">Contacts Application</field>            
        </record>
        <record model="ir.module.category" id="res_partner_category">
            <field name="name">Contacts</field>
            <field name="description">Contacts Application</field>  
            <field name="parent_id" ref="res_partner_parent__category"></field>          
        </record>
<!-- Groups res partner-->
        <!-- Group : collaborateur -->
        <record id="group_contacts_collaborateur" model="res.groups">
            <field name="name">Collaborateur</field>
            <field name="category_id" ref="res_partner_category"/>
        </record>
        <!--Group: Manager n+1-->
        <record id="group_contacts_manager_n" model="res.groups">
            <field name="name">Manager N+1</field>
            <field name="category_id" ref="res_partner_category"/>
            <field name="implied_ids" eval="[(4, ref('group_contacts_collaborateur'))]"/> 
        </record>
        <!-- Group : manager rh-->
        <record id="group_contacts_manager_rh" model="res.groups">
            <field name="name">Manager RH</field>
            <field name="category_id" ref="res_partner_category"/>
            <field name="implied_ids" eval="[(4, ref('group_contacts_manager_n'))]"/>
        </record>
        <!-- Group : manager it/direction-->
        <record id="group_contacts_manager" model="res.groups">
            <field name="name">Manager IT/Direction</field>
            <field name="category_id" ref="res_partner_category"/>
            <field name="implied_ids" eval="[(4, ref('group_contacts_manager_rh'))]"/>
        </record>
       
        <!-- Update the existing rule for collaborateur rule -->
        <function name="write" model="ir.model.data">
            <function name="search" model="ir.model.data">
                <value eval="[('module', 'in', ['base','ep_base']), ('name', 'in', ['res_partner_rule_private_employee','res_partner_manager_n'])]"/>
            </function>
            <value eval="{'noupdate': False}"/>
        </function>
<!--Rules : res.partner-->
        <!--Rule : group collaborateur-->
        <record id="res_partner_readonly_all" model="ir.rule">
            <field name="name">res.partner.rule.all.readonly</field>
            <field name="model_id" ref="model_res_partner"/>
            <field name="domain_force">[(1,'=',1)]</field>
            <field name="groups" eval="[(4,ref('group_contacts_collaborateur','res_partner_manager_n'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>
        <record id="base.res_partner_rule_private_employee" model="ir.rule">
            <field name="name">res.partner.rule.private.employee</field>
            <field name="model_id" ref="model_res_partner"/>
            <!-- collaborateur has acces to read/create/moodify where partner_id is in his portfolios-->
            <field name="domain_force">['|','|','|',('id','=',2),('id','=',user.partner_id.id),('portfolio_ids.owner_id.id','in',[user.id]),('portfolio_ids.user_ids.id','in',[user.id])]</field>
            <field name="groups" eval="[(6,0,[ref('group_contacts_collaborateur')])]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>
        
        <!-- Rule : group user intern-->
        <record id="res_partner_internal_user" model="ir.rule">
            <field name="name">res.partner.rule.internal.user</field>
            <field name="model_id" ref="model_res_partner"/>
            <field name="domain_force">[('id','=',user.partner_id.id)]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>
        <!--Rule : group manager it/direction-->
        <record id="res_partner_manager_rule" model="ir.rule">
            <field name="name">res.partner.rule.manager</field>
            <field name="model_id" ref="model_res_partner"/>
            <field name="domain_force">[(1,'=',1)]</field>
            <field name="groups" eval="[(4, ref('group_contacts_manager'))]"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!--Rule : group manager n+1-->
        <record id="res_partner_manager_n" model="ir.rule">
            <field name="name">res.partner.rule.manager.n</field>
            <field name="model_id" ref="model_res_partner"/>
            <!--manager n+1 can read,modify and create all opportunities where the partner_id is a in one of portfolios where the user is responsible  -->
            <field name="domain_force">['|',('portfolio_ids.owner_id.employee_ids.parent_id','child_of',user.employee_ids.ids),('portfolio_ids.user_ids.employee_ids.parent_id','child_of',user.employee_ids.ids)]</field>
            <field name="groups" eval="[(4, ref('group_contacts_manager_n')),(4, ref('group_contacts_manager_rh'))]"/>
            <field name="perm_unlink" eval="False"/>
        </record>

    </data>
</odoo>